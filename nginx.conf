server {

    listen 80;

    client_max_body_size 4G;

    access_log /etc/nginx/conf.d/nginx-access.log;
    error_log /etc/nginx/conf.d/nginx-error.log;

    client_header_timeout 3600s;
    client_body_timeout 3600s;
    send_timeout 3600s;

    location /static/ {
        alias   /srv/app/data/static/;
    }

    location /media/ {
        alias   /srv/app/data/media/;
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        include /etc/nginx/uwsgi_params;
        uwsgi_pass unix:///srv/app/data/uwsgi.sock;
        uwsgi_connect_timeout 3600s;
        uwsgi_read_timeout 3600s;
        uwsgi_send_timeout 3600s;
    }

    ## Error pages
    #error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #    root /srv/app/data/static/;
    #}

}
